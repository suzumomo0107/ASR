import json
from pathlib import Path

import argparse
import random

parser = argparse.ArgumentParser()
parser.add_argument('--ignore_lines', default=0, type=int) #45
args = parser.parse_args()

input_file = "/work2/suzumomo/ASR_sensei/checkpoints_3/e191-200-shallow-fusion_N-best.txt"
output_file_clean = "/work2/ueno/data/LibriSpeech/data/dev_clean/text.txt"
# output_file_other = "/work2/ueno/data/LibriSpeech/data/dev_other/text.txt"

def json_make(path: Path, obj: dict) -> None:
    ls = None
    with open(path, 'r+') as f:
        ls = f.readlines()
        if ls == []:
            ls.append('[\n')
        if ls[-1] == ']':
            ls[-1] = ','
        ls.insert(len(ls), f'{json.dumps(obj, indent=4 ,ensure_ascii=False)}')
        ls.insert(len(ls), '\n]')

    with open(path, 'w') as f:
        f.writelines(ls)
        
def get_output(target_line, output_file_path):
    with open(output_file_path) as f:
        for i, line in enumerate(f):
            if i == target_line:
                words = line.strip().split('|', 1)
    return words[1:]    

def main():
    path = Path(__file__).parent/'tmp6.json'
    target_line = 0
    with open(input_file) as f:
        for i, line in enumerate(f):
            if i+1 <= args.ignore_lines or (not '.npy' in line.strip() and not '.htk' in line.strip()) or 'lengths.npy' in line.strip():
                continue
            read_line = line.strip().split('|', 1)
            inputs = [item.replace('[', '').replace(']', '') for item in read_line[1:]]
            responce = get_output(target_line, output_file_clean)

            elements = inputs[0].split(", ")

            random_index = random.randint(0, 9)
            if elements:
                elements.pop(random_index)

            inputs[0] = ", ".join(elements)
            input = inputs[0] + ", " + responce[0] 

            # カンマで分割してリストにする
            input = input.split(", ")
            input = [item.strip('\'"') for item in input]
            random.shuffle(input)

            target_line += 1

            dict_obj = {'Instruction':'You are an ASR (automatic speech recognition) transcript selector. \
                        You have ten transcripts generated by an ASR model. \
                        Your task is to select the most likely transcript from them. \
                        If the selected transcripts have grammatical or logical errors, you will modify them accordingly to produce the most accurate and coherent transcript. \
                        You must show only one transcript.' ,
                        # "You are an ASR (automatic speech recognition) transcript selector. \
                        # You have ten transcripts generated by an ASR model. \
                        # Your task is to select the most likely transcript from them. \
                        # Even though the selected transcript has grammatical or logical errors, you do not have to modify them \
                        # You must show only one transcript.", \
                        'Input':input, \
                        'Responce':responce}
            json_make(path, dict_obj)
            if i == 2747: ###5611:
                break

if __name__ == '__main__':
    main()